// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.


// Generated by Quartus Prime Version 20.1 (Build Build 720 11/11/2020)
// Created on Fri Dec 03 19:49:21 2021

COMPORATOR COMPORATOR_inst
(
	.i_clk(i_clk_sig) ,	// input  i_clk_sig
	.i_ready(i_ready_sig) ,	// input  i_ready_sig
	.op(op_sig) ,	// input [7:0] op_sig
	.reset(reset_sig) ,	// input  reset_sig
	.o_ready(o_ready_sig) ,	// output  o_ready_sig
	.op_code(op_code_sig) 	// output [7:0] op_code_sig
);

defparam COMPORATOR_inst.plus = 'b00101011;
defparam COMPORATOR_inst.minus = 'b00101101;
defparam COMPORATOR_inst.multiply = 'b00101010;
defparam COMPORATOR_inst.divide = 'b00101111;
